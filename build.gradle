plugins {
    id 'java'
    id "jacoco"
    id 'io.quarkus'
    id "io.freefair.lombok" version "8.4"
    id "org.sonarqube" version "4.3.1.3277"
    id "com.diffplug.spotless" version "6.22.0"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-rest-client-reactive-jackson'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-picocli'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkiverse.githubapi:quarkus-github-api:1.316.0'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation "org.wiremock:wiremock:3.2.0"
    testImplementation "org.mockito:mockito-core:3.9.0"
}

group 'org.acme'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

project.tasks["sonar"].dependsOn "build"

sonar {
    properties {
        property "sonar.projectKey", "quyt_qualityannotate"
        property "sonar.organization", "quyt"
        property "sonar.host.url", "https://sonarcloud.io"

        property "sonar.projectName", "Quality Annotate"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
test.finalizedBy jacocoTestReport

spotless {
  encoding 'UTF-8'
  format 'misc', {
    // define the files to apply `misc` to
    target '*.gradle', '*.md', '.gitignore'
    trimTrailingWhitespace()
    indentWithSpaces()
    endWithNewline()
  }
  java {
    importOrderFile("$rootDir/config/code-formatter/eclipse.importorder")
    eclipse().configFile("$rootDir/config/code-formatter/eclipse.xml")

    removeUnusedImports()
    cleanthat()
    lineEndings = "unix"
    encoding = "utf-8"
    trimTrailingWhitespace()
    endWithNewline()
  }
}
